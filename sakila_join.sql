use sakila;


-- Write SQL queries to perform the following tasks using the Sakila database:

-- 1-List the number of films per category.
select f.category_id,count(f.film_id), c.name
from film_category as f
join category as c
on f.category_id =  c.category_id
group by category_id;


-- 2- Retrieve the store ID, city, and country for each store.
select store_id,city, country
from store as s
join address as a
on s.address_id = a.address_id
join city as c
on a.city_id = c.city_id
join country as co
on c.country_id = co.country_id;

-- 3-Calculate the total revenue generated by each store in dollars.
select s.store_id, sum(p.amount)
from store as s
join staff as t
on s.store_id = t.store_id
join payment as p
on t.staff_id = p.staff_id
group by s.store_id;

-- 4-Determine the average running time of films for each category.
select category_id, avg(length)
from film_category as f
join film as fi
on f.film_id = fi.film_id
group by category_id;

-- 5-Identify the film categories with the longest average running time.
select category_id, avg(length) as average_time
from film_category as f
join film as fi
on f.film_id = fi.film_id
group by category_id
order by average_time desc
limit 3;

-- 6- Display the top 10 most frequently rented movies in descending order.
select i.film_id, count(r.inventory_id) as total_rental
from inventory as i
join rental as r
on i.inventory_id = r.inventory_id
group by film_id
order by total_rental desc
limit 10;


-- 7-Determine if "Academy Dinosaur" can be rented from Store 1.
select f.title
from film as f
join inventory as i
on f.film_id = i.film_id
where title ="Academy Dinosaur" and store_id = 1;

-- 8-Provide a list of all distinct film titles, along with their availability status in the inventory. 
-- Include a column indicating whether each title is 'Available' or 'NOT available.' 
-- Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."

SELECT 
    f.title AS film_title,
    CASE 
        WHEN COUNT(i.inventory_id) > 0 THEN 'Available'
        ELSE 'NOT Available'
    END AS availability_status
FROM film AS f
LEFT JOIN inventory AS i
ON f.film_id = i.film_id
GROUP BY f.film_id, f.title
ORDER BY f.title;





